# CloudBuild Pipeline for Front-end Dockerfile
steps:
  # Docker Build Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'BUILD_FRONTEND'
    args: ['build', '-t', '$_FRONTEND_IMAGE', '-f', './client/Dockerfile', '.']

  # Docker Push Image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'PUSH_FRONTEND'
    args: ['push', '$_FRONTEND_IMAGE']

  # Docker Deploy image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'DEPLOY_FRONTEND'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '$_FRONTEND_SERVICE_NAME'
      - '--project=$_SERVICE_PROJECT'
      - '--region=$_SERVICE_REGION'
      - '--image=$_FRONTEND_IMAGE'

images: # Display the image in the build results - Build Artifacts
  - '$_FRONTEND_IMAGE'

substitutions:
  _FRONTEND_IMAGE: 'northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REGISTRY}/${_FRONTEND_IMAGENAME}:${SHORT_SHA}'
  _SERVICE_PROJECT: 'astahov-staging'
  _SERVICE_REGION: 'northamerica-northeast1'
  _FRONTEND_SERVICE_NAME: 'my-docker-app-stage' # Update with your service name
  _DOCKER_REGISTRY: 'astahov-docker-repo'
  _FRONTEND_IMAGENAME: 'app-stage' # Update with your image name
